# -*- coding: utf-8 -*-
"""Lee.Dacosta-POS_Program_ITT103-SP2025.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gMLWw9WO32yrOfMTQ0K9dRE31_tCrmyk
"""

import os

#Shows a list of items available with respective name, price, and stock quantity
products = {
    "paper towels": {"price": 24.5, "stock": 32},
    "swiss miss": {"price": 10.5, "stock": 15},
    "ice-cream": {"price": 20.0, "stock": 43},
    "Adobo": {"price": 12.0, "stock": 25},
    "Cereal": {"price": 15.0, "stock": 50},
    "Soap": {"price": 10.0, "stock": 25},
    "Ramen": {"price": 16.0, "stock": 15},
    "milk": {"price": 14.5, "stock": 90},
    "Chicken": {"price": 70.0, "stock": 20},
    "Rice": {"price": 55.0, "stock": 100},
}

# Function that will display the product catalog
def display_catalog():
    print("\nProduct Catalog:")
    print("------------------------------")
    for product, details in products.items():
        print(f"{product} - ${details['price']} (Stock: {details['stock']})")
    print("------------------------------")

# Function for checking stock availability
def check_low_stock():
    for product, details in products.items():
        if details["stock"] < 5:
            print(f"ALERT: {product} stock is almost depleted ({details['stock']} remaining)")

# Function used for adding an item to the cart
def add_to_cart(cart):
    while True:
        product_name = input("What item would you like to add to cart, please check what is available before doing so: ").capitalize()
        if product_name in products:
            try:
                quantity = int(input(f"Please enter specified quantity for {product_name}: "))
                if quantity <= 0:
                    print("Please ensure you are using a positive integer.")
                    continue
                if products[product_name]["stock"] >= quantity:
                    cart[product_name] = cart.get(product_name, 0) + quantity
                    products[product_name]["stock"] -= quantity
                    print(f"{quantity} x {product_name} added to the cart.")
                    break
                else:
                    print(f"Sorry, only {products[product_name]['stock']} of {product_name} are available in stock.")
            except ValueError:
                print("Please enter a valid quantity.")
        else:
            print(f"Product {product_name} not found. Please try again.")

# Function used for removing an item from the cart
def remove_from_cart(cart):
    while True:
        product_name = input("What product would you like to remove from your cart: ").capitalize()
        if product_name in cart:
            try:
                quantity = int(input(f"Please enter quantity of {product_name} to remove: "))
                if quantity <= 0:
                    print("Please ensure it is a positive integer.")
                    continue
                if cart[product_name] >= quantity:
                    cart[product_name] -= quantity
                    products[product_name]["stock"] += quantity
                    if cart[product_name] == 0:
                        del cart[product_name]
                    print(f"{quantity} x {product_name} removed from the cart.")
                    break
                else:
                    print(f"You don't have that many {product_name} in your cart.")
            except ValueError:
                print("Please enter a valid quantity.")
        else:
            print(f"{product_name} is not in your cart. Please try again.")

# Function showing what is in the cart or if the cart is empty
def view_cart(cart):
    if not cart:
        print("\nYour cart is empty.")
    else:
        print("\nItems in your cart:")
        subtotal = 0
        for item, quantity in cart.items():
            price = products[item]["price"]
            total_price = price * quantity
            subtotal += total_price
            print(f"{item} - Quantity: {quantity}, Unit Price: ${price}, Total: ${total_price}")
        return subtotal
    return 0

# Function to processing checkout and payment
def checkout(cart, subtotal):
    sales_tax = 0.10
    total_due = subtotal * (1 + sales_tax)
    print("\nSubtotal: ${:.2f}".format(subtotal))
    print(f"Sales Tax (10%): ${subtotal * sales_tax:.2f}")
    print(f"Total Amount Due: ${total_due:.2f}")

    while True:
        try:
            amount_received = float(input("Please enter the amount received from the customer: $"))
            if amount_received >= total_due:
                change = amount_received - total_due
                print(f"Amount received: ${amount_received:.2f}")
                print(f"Change to be returned: ${change:.2f}")
                generate_receipt(cart, subtotal, total_due, amount_received, change)
                break
            else:
                print("Insufficient amount received. Please add more to the sum.")
        except ValueError:
            print("Please enter a valid amount.")

# Function used to generate a receipt
def generate_receipt(cart, subtotal, total_due, amount_received, change):
    print("\n----------------------------------------")
    print("                RECEIPT                  ")
    print("----------------------------------------")
    print("Store: EverValue Grocers")
    print("\nItems Purchased:")
    for item, quantity in cart.items():
        price = products[item]["price"]
        total_price = price * quantity
        print(f"{item} - Quantity: {quantity}, Unit Price: ${price}, Total: ${total_price}")

    print("\n----------------------------------------")
    print(f"Subtotal: ${subtotal:.2f}")
    print(f"Sales Tax (10%): ${subtotal * 0.10:.2f}")
    print(f"Total Due: ${total_due:.2f}")
    print(f"Amount Received: ${amount_received:.2f}")
    print(f"Change: ${change:.2f}")
    print("\nThank you for shopping at EverValue, your needs mean EVERthing to us!")
    print("----------------------------------------\n")

# Menu function used to interact with the system
def main():
    cart = {}
    while True:
        print("\nShopping Menu")
        print("1. View Product Catalog")
        print("2. Add to Cart")
        print("3. Remove from Cart")
        print("4. View Cart")
        print("5. Checkout")
        print("6. Exit")
        choice = input("Please choose an option (1-6): ")

        if choice == "1":
            display_catalog()
            check_low_stock()
        elif choice == "2":
            add_to_cart(cart)
        elif choice == "3":
            remove_from_cart(cart)
        elif choice == "4":
            subtotal = view_cart(cart)
            if subtotal > 0:
                print(f"\nSubtotal: ${subtotal:.2f}")
        elif choice == "5":
            subtotal = view_cart(cart)
            if subtotal > 0:
                checkout(cart, subtotal)
                cart.clear()  # Empty the cart after checkout
        elif choice == "6":
            print("Thank you for shopping using the POS system. Goodbye!")
            break
        else:
            print("Invalid option. Please try again.")

if __name__ == "__main__":
    main()